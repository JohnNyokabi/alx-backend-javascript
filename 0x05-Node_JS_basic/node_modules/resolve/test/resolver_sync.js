var path = require('path');
var fs = require('fs');
var test = require('tape');

var resolve = require('../');
var sync = require('../sync');

var requireResolveSupportsPaths = require.resolve.length > 1
    && !(/^v12\.[012]\./).test(process.version); // broken in v12.0-12.2, see https://github.com/nodejs/node/issues/27794

test('`./sync` entry point', function (t) {
    t.equal(resolve.sync, sync, '`./sync` entry point is the same as `.sync` on `main`');
    t.end();
});

test('foo', function (t) {
    var dir = path.join(__dirname, 'resolver');

    t.equal(
        resolve.sync('./foo', { basedir: dir }),
        path.join(dir, 'foo.js'),
        './foo'
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('./foo', { basedir: dir }),
            require.resolve('./foo', { paths: [dir] }),
            './foo: resolve.sync === require.resolve'
        );
    }

    t.equal(
        resolve.sync('./foo.js', { basedir: dir }),
        path.join(dir, 'foo.js'),
        './foo.js'
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('./foo.js', { basedir: dir }),
            require.resolve('./foo.js', { paths: [dir] }),
            './foo.js: resolve.sync === require.resolve'
        );
    }

    t.equal(
        resolve.sync('./foo.js', { basedir: dir, filename: path.join(dir, 'bar.js') }),
        path.join(dir, 'foo.js')
    );

    t.throws(function () {
        resolve.sync('foo', { basedir: dir });
    });

    // Test that filename is reported as the "from" value when passed.
    t.throws(
        function () {
            resolve.sync('foo', { basedir: dir, filename: path.join(dir, 'bar.js') });
        },
        {
            name: 'Error',
            message: "Cannot find module 'foo' from '" + path.join(dir, 'bar.js') + "'"
        }
    );

    t.end();
});

test('bar', function (t) {
    var dir = path.join(__dirname, 'resolver');

    var basedir = path.join(dir, 'bar');

    t.equal(
        resolve.sync('foo', { basedir: basedir }),
        path.join(dir, 'bar/node_modules/foo/index.js'),
        'foo in bar'
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('foo', { basedir: basedir }),
            require.resolve('foo', { paths: [basedir] }),
            'foo in bar: resolve.sync === require.resolve'
        );
    }

    t.end();
});

test('baz', function (t) {
    var dir = path.join(__dirname, 'resolver');

    t.equal(
        resolve.sync('./baz', { basedir: dir }),
        path.join(dir, 'baz/quux.js'),
        './baz'
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('./baz', { basedir: dir }),
            require.resolve('./baz', { paths: [dir] }),
            './baz: resolve.sync === require.resolve'
        );
    }

    t.end();
});

test('biz', function (t) {
    var dir = path.join(__dirname, 'resolver/biz/node_modules');

    t.equal(
        resolve.sync('./grux', { basedir: dir }),
        path.join(dir, 'grux/index.js')
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('./grux', { basedir: dir }),
            require.resolve('./grux', { paths: [dir] }),
            './grux: resolve.sync === require.resolve'
        );
    }

    var tivDir = path.join(dir, 'grux');
    t.equal(
        resolve.sync('tiv', { basedir: tivDir }),
        path.join(dir, 'tiv/index.js')
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('tiv', { basedir: tivDir }),
            require.resolve('tiv', { paths: [tivDir] }),
            'tiv: resolve.sync === require.resolve'
        );
    }

    var gruxDir = path.join(dir, 'tiv');
    t.equal(
        resolve.sync('grux', { basedir: gruxDir }),
        path.join(dir, 'grux/index.js')
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('grux', { basedir: gruxDir }),
            require.resolve('grux', { paths: [gruxDir] }),
            'grux: resolve.sync === require.resolve'
        );
    }

    t.end();
});

test('normalize', function (t) {
    var dir = path.join(__dirname, 'resolver/biz/node_modules/grux');

    t.equal(
        resolve.sync('../grux', { basedir: dir }),
        path.join(dir, 'index.js')
    );
    if (requireResolveSupportsPaths) {
        t.equal(
            resolve.sync('../grux', { basedir: dir }),
            require.resolve('../grux', { paths: [dir] }),
            '../grux: resolve.sync === require.resolve'
        );
    }

    t.end();
});

test('cup', function (t) {
    var dir = path.join(__dirname, 'resolver');

    t.equal(
        resolve.sync('./cup', {
            basedir: dir,
            extensions: ['.js', '.coffee']
        }),
        path.join(dir, 'cup.coffee'),
        './cup -> ./cup.coffee'
    );

    t.equal(
        resolve.sync('./cup.coffee', { basedir: dir }),
        pat